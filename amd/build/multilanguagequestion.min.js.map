{"version":3,"file":"multilanguagequestion.min.js","sources":["../src/multilanguagequestion.js"],"sourcesContent":["/******************************************************************************\n *\n * This module simply handles changes in the Language selection dropdown for\n * multilanguage questions as seen by students. It switches the Ace language\n * accordingly.\n * It should only be loaded in conjunction with the ui_ace module.\n *\n * @module qtype_coderunner/multilanguagequestion\n * @copyright  Richard Lobb, 2018, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n * TODO: is there a race problem here??\n */\n\ndefine(['jquery'], function($) {\n    /**\n     * Initialise the language selector dropdown when the document is ready.\n     * @param {string} taId The ID of the student answer box text area.\n     */\n    function initLangSelector(taId) {\n        $().ready(function() {\n            initLangSelectorWhenReady(taId);\n        });\n    }\n\n    /**\n     * Initialise the language selector. Called by initLanSelector when the\n     * document is ready so the name is a bit of a misnomer.\n     * @param {string} taId The ID of the student answer box text area.\n     */\n    function initLangSelectorWhenReady(taId) {\n        var ta = $(document.getElementById(taId)),  // The jquery text area element(s).\n            selector = $(\".coderunner-lang-select\");\n\n        /**\n         * Set the language for the Ace editor.\n         */\n        function setAceLang() {\n            // Set the language for the Ace plugin (or any other plugin if it\n            // has a setLanguage method).\n            var lang = selector.val(),\n                uiWrapper = ta.data('current-ui-wrapper'); // Currently-active UI wrapper on reqd ta.\n\n            if (uiWrapper && uiWrapper.uiInstance && typeof uiWrapper.uiInstance.setLanguage === 'function') {\n                // TODO: define setLanguage as a required method of all UI plugins.\n                uiWrapper.uiInstance.setLanguage(lang);\n            }\n        }\n\n        selector.on('change', setAceLang);\n    }\n\n    return {'initLangSelector' : initLangSelector};\n});"],"names":["define","$","taId","ready","ta","document","getElementById","selector","setAceLang","lang","val","uiWrapper","data","uiInstance","setLanguage","on","initLangSelectorWhenReady"],"mappings":";;;;;;;;;;;;;AAcAA,gDAAO,CAAC,WAAW,SAASC,SAsCjB,2BAjCmBC,MACtBD,IAAIE,OAAM,qBAUqBD,UAC3BE,GAAKH,EAAEI,SAASC,eAAeJ,OAC/BK,SAAWN,EAAE,oCAKRO,iBAGDC,KAAOF,SAASG,MAChBC,UAAYP,GAAGQ,KAAK,sBAEpBD,WAAaA,UAAUE,YAA0D,mBAArCF,UAAUE,WAAWC,aAEjEH,UAAUE,WAAWC,YAAYL,MAIzCF,SAASQ,GAAG,SAAUP,YA5BlBQ,CAA0Bd"}