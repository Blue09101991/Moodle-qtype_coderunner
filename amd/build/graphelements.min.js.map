{"version":3,"file":"graphelements.min.js","sources":["../src/graphelements.js"],"sourcesContent":["/******************************************************************************\n *\n * A module for use by ui_graph, defining classes Node, Link, SelfLink,\n * StartLink and TemporaryLink\n *\n * @module qtype_coderunner/graphelements\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// This code is a modified version of Finite State Machine Designer\n// (http://madebyevan.com/fsm/)\n/*\n Finite State Machine Designer (http://madebyevan.com/fsm/)\n License: MIT License (see below)\n Copyright (c) 2010 Evan Wallace\n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n OTHER DEALINGS IN THE SOFTWARE.\n*/\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more util.details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\ndefine(['qtype_coderunner/graphutil'], function(util) {\n\n    /**\n     * Define a class Node that represents a node in a graph\n     * @param {object} parent The Graph to which this node belongs.\n     * @param {int} x The x-coordinate of the node.\n     * @param {int} y The y-coordinate of the node.\n     *\n     */\n    function Node(parent, x, y) {\n        this.parent = parent;  // The ui_graph instance.\n        this.x = x;\n        this.y = y;\n        this.mouseOffsetX = 0;\n        this.mouseOffsetY = 0;\n        this.isAcceptState = false;\n        this.textBox = new TextBox('', this);\n        this.caretPosition = 0;\n    }\n\n    // At the start of a drag, record our position relative to the mouse.\n    Node.prototype.setMouseStart = function(mouseX, mouseY) {\n        this.mouseOffsetX = this.x - mouseX;\n        this.mouseOffsetY = this.y - mouseY;\n    };\n\n    Node.prototype.setAnchorPoint = function(x, y) {\n        this.x = x + this.mouseOffsetX;\n        this.y = y + this.mouseOffsetY;\n    };\n\n    // Given a new mouse position during a drag, move to the appropriate\n    // new position.\n    Node.prototype.trackMouse = function(mouseX, mouseY) {\n        this.x = this.mouseOffsetX + mouseX;\n        this.y = this.mouseOffsetY + mouseY;\n    };\n\n    Node.prototype.draw = function(c) {\n        // Draw the circle.\n        c.beginPath();\n        c.arc(this.x, this.y, this.parent.nodeRadius(), 0, 2 * Math.PI, false);\n        c.stroke();\n\n        // Draw the text.\n        this.textBox.draw(this.x, this.y, null, this);\n\n        // Draw a double circle for an accept state.\n        if(this.isAcceptState) {\n            c.beginPath();\n            c.arc(this.x, this.y, this.parent.nodeRadius() - 6, 0, 2 * Math.PI, false);\n            c.stroke();\n        }\n    };\n\n    Node.prototype.closestPointOnCircle = function(x, y) {\n        var dx = x - this.x;\n        var dy = y - this.y;\n        var scale = Math.sqrt(dx * dx + dy * dy);\n        return {\n            'x': this.x + dx * this.parent.nodeRadius() / scale,\n            'y': this.y + dy * this.parent.nodeRadius() / scale,\n        };\n    };\n\n    Node.prototype.containsPoint = function(x, y) {\n        return (x - this.x) * (x - this.x) + (y - this.y) * (y - this.y) < this.parent.nodeRadius() * this.parent.nodeRadius();\n    };\n\n    // Method of a Node that, given a list of all links in a graph, returns\n    // a list of any nodes that contain a link to this node (excluding StartLinks\n    // and SelfLinks).\n    Node.prototype.neighbours = function(links) {\n        var neighbours = [], link;\n        for (var i = 0; i < links.length; i++) {\n            link = links[i];\n            if (link instanceof Link) { // Exclude SelfLinks and StartLinks.\n                if (link.nodeA === this && !neighbours.includes(link.nodeB)) {\n                    neighbours.push(link.nodeB);\n                } else if (link.nodeB === this && !neighbours.includes(link.nodeA)) {\n                    neighbours.push(link.nodeA);\n                }\n            }\n        }\n        return neighbours;\n    };\n\n    // Method of Node that traverses a graph defined by a given set of links\n    // starting at 'this' node and updating the visited list for each new\n    // node. Returns the updated visited list, which (for the root call)\n    // is a list of all nodes connected to the given start node.\n    Node.prototype.traverseGraph = function(links, visited) {\n        var neighbours,\n            neighbour;\n        if (!visited.includes(this)) {\n            visited.push(this);\n            neighbours = this.neighbours(links);\n            for (var i = 0; i < neighbours.length; i++) {\n                neighbour = neighbours[i];\n                if (!visited.includes(neighbour)) {\n                    neighbour.traverseGraph(links, visited);\n                }\n            }\n        }\n        return visited;\n    };\n\n    /**\n     * Define a class Link that represents a connection between two nodes.\n     * @param {object} parent The graph to which this link belongs.\n     * @param {object} a The node at one end of the link.\n     * @param {object} b The node at the other end of the link.\n     *\n     */\n    function Link(parent, a, b) {\n        this.parent = parent;  // The parent ui_digraph instance.\n        this.nodeA = a;\n        this.nodeB = b;\n        this.textBox = new TextBox('', this);\n        this.lineAngleAdjust = 0; // Value to add to textAngle when link is straight line.\n        this.caretPosition = 0;\n\n        // Make anchor point relative to the locations of nodeA and nodeB.\n        this.parallelPart = 0.5;    // Percentage from nodeA to nodeB.\n        this.perpendicularPart = 0; // Pixels from line between nodeA and nodeB.\n    }\n\n    Link.prototype.getAnchorPoint = function() {\n        var dx = this.nodeB.x - this.nodeA.x;\n        var dy = this.nodeB.y - this.nodeA.y;\n        var scale = Math.sqrt(dx * dx + dy * dy);\n        return {\n            'x': this.nodeA.x + dx * this.parallelPart - dy * this.perpendicularPart / scale,\n            'y': this.nodeA.y + dy * this.parallelPart + dx * this.perpendicularPart / scale\n        };\n    };\n\n    Link.prototype.setAnchorPoint = function(x, y) {\n        var dx = this.nodeB.x - this.nodeA.x;\n        var dy = this.nodeB.y - this.nodeA.y;\n        var scale = Math.sqrt(dx * dx + dy * dy);\n        this.parallelPart = (dx * (x - this.nodeA.x) + dy * (y - this.nodeA.y)) / (scale * scale);\n        this.perpendicularPart = (dx * (y - this.nodeA.y) - dy * (x - this.nodeA.x)) / scale;\n        // Snap to a straight line.\n        if(this.parallelPart > 0 && this.parallelPart < 1 && Math.abs(this.perpendicularPart) < this.parent.SNAP_TO_PADDING) {\n            this.lineAngleAdjust = (this.perpendicularPart < 0) * Math.PI;\n            this.perpendicularPart = 0;\n        }\n    };\n\n    Link.prototype.getEndPointsAndCircle = function() {\n        if(this.perpendicularPart === 0) {\n            var midX = (this.nodeA.x + this.nodeB.x) / 2;\n            var midY = (this.nodeA.y + this.nodeB.y) / 2;\n            var start = this.nodeA.closestPointOnCircle(midX, midY);\n            var end = this.nodeB.closestPointOnCircle(midX, midY);\n            return {\n                'hasCircle': false,\n                'startX': start.x,\n                'startY': start.y,\n                'endX': end.x,\n                'endY': end.y,\n            };\n        }\n        var anchor = this.getAnchorPoint();\n        var circle = util.circleFromThreePoints(this.nodeA.x, this.nodeA.y, this.nodeB.x, this.nodeB.y, anchor.x, anchor.y);\n        var isReversed = (this.perpendicularPart > 0);\n        var reverseScale = isReversed ? 1 : -1;\n        var rRatio = reverseScale * this.parent.nodeRadius() / circle.radius;\n        var startAngle = Math.atan2(this.nodeA.y - circle.y, this.nodeA.x - circle.x) - rRatio;\n        var endAngle = Math.atan2(this.nodeB.y - circle.y, this.nodeB.x - circle.x) + rRatio;\n        var startX = circle.x + circle.radius * Math.cos(startAngle);\n        var startY = circle.y + circle.radius * Math.sin(startAngle);\n        var endX = circle.x + circle.radius * Math.cos(endAngle);\n        var endY = circle.y + circle.radius * Math.sin(endAngle);\n        return {\n            'hasCircle': true,\n            'startX': startX,\n            'startY': startY,\n            'endX': endX,\n            'endY': endY,\n            'startAngle': startAngle,\n            'endAngle': endAngle,\n            'circleX': circle.x,\n            'circleY': circle.y,\n            'circleRadius': circle.radius,\n            'reverseScale': reverseScale,\n            'isReversed': isReversed,\n        };\n    };\n\n    Link.prototype.draw = function(c) {\n        var linkInfo = this.getEndPointsAndCircle(), textX, textY, textAngle, relDist;\n        // Draw arc.\n        c.beginPath();\n        if(linkInfo.hasCircle) {\n            c.arc(linkInfo.circleX,\n                  linkInfo.circleY,\n                  linkInfo.circleRadius,\n                  linkInfo.startAngle,\n                  linkInfo.endAngle,\n                  linkInfo.isReversed);\n        } else {\n            c.moveTo(linkInfo.startX, linkInfo.startY);\n            c.lineTo(linkInfo.endX, linkInfo.endY);\n        }\n        c.stroke();\n        // Draw the head of the arrow.\n        if(linkInfo.hasCircle) {\n            this.parent.arrowIfReqd(c,\n                      linkInfo.endX,\n                      linkInfo.endY,\n                      linkInfo.endAngle - linkInfo.reverseScale * (Math.PI / 2));\n        } else {\n            this.parent.arrowIfReqd(c,\n                      linkInfo.endX,\n                      linkInfo.endY,\n                      Math.atan2(linkInfo.endY - linkInfo.startY, linkInfo.endX - linkInfo.startX));\n        }\n        // Draw the text.\n        relDist = this.textBox.relDist;\n        if(linkInfo.hasCircle) {\n            var startAngle = linkInfo.startAngle;\n            var endAngle = linkInfo.endAngle;\n            if (endAngle < startAngle) {\n                endAngle += Math.PI * 2;\n            }\n\n            textAngle = ((1 - relDist) * startAngle + relDist * endAngle);\n            if (linkInfo.isReversed){\n              textAngle += (1 - relDist) * (2 * Math.PI); // Reflect text across the line between the link points\n            }\n            textX = linkInfo.circleX + linkInfo.circleRadius * Math.cos(textAngle);\n            textY = linkInfo.circleY + linkInfo.circleRadius * Math.sin(textAngle);\n            this.textBox.draw(textX, textY, textAngle, this);\n        } else {\n            textX = ((1 - relDist) * linkInfo.startX + relDist * linkInfo.endX);\n            textY = ((1 - relDist) * linkInfo.startY + relDist * linkInfo.endY);\n            textAngle = Math.atan2(linkInfo.endX - linkInfo.startX, linkInfo.startY - linkInfo.endY);\n            this.textBox.draw(textX, textY, textAngle + this.lineAngleAdjust, this);\n        }\n    };\n\n    Link.prototype.containsPoint = function(x, y) {\n        var linkInfo = this.getEndPointsAndCircle(), dx, dy, distance;\n        if(linkInfo.hasCircle) {\n            dx = x - linkInfo.circleX;\n            dy = y - linkInfo.circleY;\n            distance = Math.sqrt(dx * dx + dy * dy) - linkInfo.circleRadius;\n            if(Math.abs(distance) < this.parent.HIT_TARGET_PADDING) {\n                var angle = Math.atan2(dy, dx);\n                var startAngle = linkInfo.startAngle;\n                var endAngle = linkInfo.endAngle;\n                if(linkInfo.isReversed) {\n                    var temp = startAngle;\n                    startAngle = endAngle;\n                    endAngle = temp;\n                }\n                if(endAngle < startAngle) {\n                    endAngle += Math.PI * 2;\n                }\n                if(angle < startAngle) {\n                    angle += Math.PI * 2;\n                } else if(angle > endAngle) {\n                    angle -= Math.PI * 2;\n                }\n                return (angle > startAngle && angle < endAngle);\n            }\n        } else {\n            dx = linkInfo.endX - linkInfo.startX;\n            dy = linkInfo.endY - linkInfo.startY;\n            var length = Math.sqrt(dx * dx + dy * dy);\n            var percent = (dx * (x - linkInfo.startX) + dy * (y - linkInfo.startY)) / (length * length);\n            distance = (dx * (y - linkInfo.startY) - dy * (x - linkInfo.startX)) / length;\n            return (percent > 0 && percent < 1 && Math.abs(distance) < this.parent.HIT_TARGET_PADDING);\n        }\n        return false;\n    };\n\n    /**\n     * Define a class SelfLink that represents a connection from a node back\n     * to itself.\n     * @param {object} parent The graph to which this link belongs.\n     * @param {object} node The node the link emerges from and returns to.\n     * @param {object} mouse The current position of the mouse that's defining\n     * the position of the self-link.\n     */\n    function SelfLink(parent, node, mouse) {\n        this.parent = parent;\n        this.node = node;\n        this.anchorAngle = 0;\n        this.mouseOffsetAngle = 0;\n        this.textBox = new TextBox('', this);\n\n        if(mouse) {\n            this.setAnchorPoint(mouse.x, mouse.y);\n        }\n    }\n\n    SelfLink.prototype.setMouseStart = function(x, y) {\n        this.mouseStartX = x;\n        this.mouseStartY = y;\n    };\n\n    SelfLink.prototype.setAnchorPoint = function(x, y) {\n        this.anchorAngle = Math.atan2(y - this.node.y, x - this.node.x) + this.mouseOffsetAngle;\n        // Snap to 90 degrees.\n        var snap = Math.round(this.anchorAngle / (Math.PI / 2)) * (Math.PI / 2);\n        if(Math.abs(this.anchorAngle - snap) < 0.1) {\n            this.anchorAngle = snap;\n        }\n        // Keep in the range -pi to pi so our containsPoint() function always works.\n        if(this.anchorAngle < -Math.PI) {\n            this.anchorAngle += 2 * Math.PI;\n        }\n        if(this.anchorAngle > Math.PI) {\n            this.anchorAngle -= 2 * Math.PI;\n        }\n    };\n\n    SelfLink.prototype.getEndPointsAndCircle = function() {\n        var circleX = this.node.x + 1.5 * this.parent.nodeRadius() * Math.cos(this.anchorAngle);\n        var circleY = this.node.y + 1.5 * this.parent.nodeRadius() * Math.sin(this.anchorAngle);\n        var circleRadius = 0.75 * this.parent.nodeRadius();\n        var startAngle = this.anchorAngle - Math.PI * 0.8;\n        var endAngle = this.anchorAngle + Math.PI * 0.8;\n        var startX = circleX + circleRadius * Math.cos(startAngle);\n        var startY = circleY + circleRadius * Math.sin(startAngle);\n        var endX = circleX + circleRadius * Math.cos(endAngle);\n        var endY = circleY + circleRadius * Math.sin(endAngle);\n        return {\n            'hasCircle': true,\n            'startX': startX,\n            'startY': startY,\n            'endX': endX,\n            'endY': endY,\n            'startAngle': startAngle,\n            'endAngle': endAngle,\n            'circleX': circleX,\n            'circleY': circleY,\n            'circleRadius': circleRadius\n        };\n    };\n\n    SelfLink.prototype.draw = function(c) {\n        var linkInfo = this.getEndPointsAndCircle();\n        // Draw arc.\n        c.beginPath();\n        c.arc(linkInfo.circleX, linkInfo.circleY, linkInfo.circleRadius, linkInfo.startAngle, linkInfo.endAngle, false);\n        c.stroke();\n        // Draw the text on the loop.\n        var relDist = this.textBox.relDist;\n        var textAngle = linkInfo.startAngle * (1 - relDist) + linkInfo.endAngle * relDist;\n        var textX = linkInfo.circleX + linkInfo.circleRadius * Math.cos(textAngle);\n        var textY = linkInfo.circleY + linkInfo.circleRadius * Math.sin(textAngle);\n        this.textBox.draw(textX, textY, textAngle, this);\n        // Draw the head of the arrow.\n        this.parent.arrowIfReqd(c, linkInfo.endX, linkInfo.endY, linkInfo.endAngle + Math.PI * 0.4);\n    };\n\n    SelfLink.prototype.containsPoint = function(x, y) {\n        var linkInfo = this.getEndPointsAndCircle();\n        var dx = x - linkInfo.circleX;\n        var dy = y - linkInfo.circleY;\n        var distance = Math.sqrt(dx * dx + dy * dy) - linkInfo.circleRadius;\n        return (Math.abs(distance) < this.parent.HIT_TARGET_PADDING);\n    };\n\n    /**\n     * Define a class StartLink that represents a start link in a finite\n     * state machine. Not useful in general digraphs.\n     * @param {object} parent The graph to which this link belongs.\n     * @param {node} node The node that the link leads into.\n     * @param {object} start The point at the open end of the link.\n     */\n    function StartLink(parent, node, start) {\n        this.parent = parent;\n        this.node = node;\n        this.deltaX = 0;\n        this.deltaY = 0;\n\n        if(start) {\n            this.setAnchorPoint(start.x, start.y);\n        }\n    }\n\n    StartLink.prototype.setAnchorPoint = function(x, y) {\n        this.deltaX = x - this.node.x;\n        this.deltaY = y - this.node.y;\n\n        if(Math.abs(this.deltaX) < this.parent.SNAP_TO_PADDING) {\n            this.deltaX = 0;\n        }\n\n        if(Math.abs(this.deltaY) < this.parent.SNAP_TO_PADDING) {\n            this.deltaY = 0;\n        }\n    };\n\n    StartLink.prototype.getEndPoints = function() {\n        var startX = this.node.x + this.deltaX;\n        var startY = this.node.y + this.deltaY;\n        var end = this.node.closestPointOnCircle(startX, startY);\n        return {\n            'startX': startX,\n            'startY': startY,\n            'endX': end.x,\n            'endY': end.y,\n        };\n    };\n\n    StartLink.prototype.draw = function(c) {\n        var endPoints = this.getEndPoints();\n\n        // Draw the line.\n        c.beginPath();\n        c.moveTo(endPoints.startX, endPoints.startY);\n        c.lineTo(endPoints.endX, endPoints.endY);\n        c.stroke();\n\n        // Draw the head of the arrow.\n        this.parent.arrowIfReqd(c, endPoints.endX, endPoints.endY, Math.atan2(-this.deltaY, -this.deltaX));\n    };\n\n    StartLink.prototype.containsPoint = function(x, y) {\n        var endPoints = this.getEndPoints();\n        var dx = endPoints.endX - endPoints.startX;\n        var dy = endPoints.endY - endPoints.startY;\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var percent = (dx * (x - endPoints.startX) + dy * (y - endPoints.startY)) / (length * length);\n        var distance = (dx * (y - endPoints.startY) - dy * (x - endPoints.startX)) / length;\n        return (percent > 0 && percent < 1 && Math.abs(distance) < this.parent.HIT_TARGET_PADDING);\n    };\n\n    /**\n     * Define a class TemporaryLink that represents a link that's in the\n     * process of being created.\n     * @param {object} parent The graph to which this link belongs.\n     * @param {object} from The node the link starts at.\n     * @param {object} to The node the link goes to.\n     */\n    function TemporaryLink(parent, from, to) {\n        this.parent = parent;\n        this.from = from;\n        this.to = to;\n    }\n\n    TemporaryLink.prototype.draw = function(c) {\n        // Draw the line.\n        c.beginPath();\n        c.moveTo(this.to.x, this.to.y);\n        c.lineTo(this.from.x, this.from.y);\n        c.stroke();\n\n        // Draw the head of the arrow.\n        this.parent.arrowIfReqd(c, this.to.x, this.to.y, Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x));\n    };\n\n    /**\n     * Define a class Button for a pseudo-menu button.\n     * @param {object} parent The graph to which this button belongs.\n     * @param {int} topX The x coordinate of the top left corner of the menu text.\n     * @param {int} topY The y coordinate of the top left corner of the menu text.\n     * @param {string} text The button label text.\n     */\n    function Button(parent, topX, topY, text) {\n      this.BUTTON_WIDTH = 60;\n      this.BUTTON_HEIGHT = 25;\n      this.TEXT_OFFSET_X = 30;\n      this.TEXT_OFFSET_Y = 17;\n      this.topX = topX;\n      this.topY = topY;\n      this.parent = parent;\n      this.text = text;\n      this.highLighted = false;\n    }\n\n    Button.prototype.containsPoint = function(x, y) {\n        return util.isInside({x: x, y: y},\n          {x: this.topX, y: this.topY, width: this.BUTTON_WIDTH, height: this.BUTTON_HEIGHT});\n    };\n\n    Button.prototype.draw = function(c) {\n        if (this.highLighted) {\n            c.fillStyle = '#FFFFFF';\n        } else {\n            c.fillStyle = '#F0F0F0';\n        }\n        c.fillRect(this.topX, this.topY,\n            this.BUTTON_WIDTH, this.BUTTON_HEIGHT);\n        c.lineWidth = 0.5;\n        c.strokeStyle = '#000000';\n        c.strokeRect(this.topX, this.topY,\n            this.BUTTON_WIDTH, this.BUTTON_HEIGHT);\n\n        c.font = '12pt Arial';\n        c.fillStyle = '#000000';\n        c.textAlign = \"center\";\n        c.fillText(this.text, this.topX + this.TEXT_OFFSET_X, this.topY + this.TEXT_OFFSET_Y);\n        c.textAlign = \"left\";\n    };\n\n    Button.prototype.onClick = function() {\n\n    };\n\n    /**\n     * Define a class HelpBox for the help box and its pseudo-menu button.\n     * @param {object} parent The graph to which this help box belongs.\n     * @param {int} topX The x coordinate of the top left corner of the help box.\n     * @param {int} topY The y coordinate of the top left corner of the help box.\n     */\n    function HelpBox(parent, topX, topY) {\n      Button.call(this, parent, topX, topY, \"Help\");\n      this.helpOpen = false;\n      this.LINE_HEIGHT = 18;\n      this.HELP_INDENT = 5;\n    }\n\n    HelpBox.prototype = new Button();\n\n    HelpBox.prototype.draw = function(c) {\n        var lines, i, y, helpText;\n\n        Button.prototype.draw.call(this, c);\n\n        if (this.helpOpen) {\n            helpText = this.parent.helpText;\n            c.font = '12pt Arial';\n            lines = helpText.split('\\n');\n            y = this.topY + this.BUTTON_HEIGHT;\n            for (i = 0; i < lines.length; i += 1) {\n                y += this.LINE_HEIGHT;\n                c.fillText(lines[i], this.topX + this.HELP_INDENT, y);\n            }\n        }\n    };\n\n    HelpBox.prototype.onClick = function() {\n        this.helpOpen = ! this.helpOpen;\n        this.parent.draw();\n    };\n\n\n    /**\n     * Define a class TextBox for a possibly editable text box that might\n     * be contained in another element.\n     * @param {string} text The text to put in the text box.\n     * @param {object} parent The graph to which the text box belongs.\n     **/\n    function TextBox(text, parent) {\n        this.text = text;\n        this.parent = parent;\n        this.caretPosition = text.length;\n        this.relDist = 0.5;\n        this.offset = parent.parent.textOffset();\n        this.dragged = false;\n        this.boundingBox = {};\n    }\n\n    // Inserts a given character into the TextBox at its current caretPosition\n    TextBox.prototype.insertChar = function(char) {\n        this.text = this.text.slice(0, this.caretPosition) + char + this.text.slice(this.caretPosition);\n        this.caretRight();\n    };\n\n    // Deletes the character in the TextBox that is located behind the current caretPosition\n    TextBox.prototype.deleteChar = function() {\n        if (this.caretPosition > 0){\n            this.text = this.text.slice(0, this.caretPosition - 1) + this.text.slice(this.caretPosition);\n            this.caretLeft();\n        }\n    };\n\n    // Moves the TextBox's caret left one character if possible\n    TextBox.prototype.caretLeft = function() {\n        if (this.caretPosition > 0) {\n            this.caretPosition --;\n        }\n    };\n\n    // Moves the TextBox's caret right one character if possible\n    TextBox.prototype.caretRight = function() {\n        if (this.caretPosition < this.text.length) {\n            this.caretPosition ++;\n        }\n    };\n\n    TextBox.prototype.containsPoint = function(x, y) {\n        var point = {x: x, y: y};\n        return util.isInside(point, this.boundingBox);\n    };\n\n    TextBox.prototype.setMouseStart = function(x, y) {\n      // At the start of a drag, record our position relative to the mouse.\n        this.mouseOffsetX = this.position.x - x;\n        this.mouseOffsetY = this.position.y - y;\n    };\n\n    TextBox.prototype.setAnchorPoint = function(x, y) {\n        x += (this.mouseOffsetX || 0);\n        y += (this.mouseOffsetY || 0);\n        var linkInfo = this.parent.getEndPointsAndCircle();\n        var relDist, offset;\n        //Calculate the relative distance of the dragged text along its parent link\n        if (linkInfo.hasCircle){\n            var textAngle = Math.atan2(y-linkInfo.circleY, x-linkInfo.circleX);\n            // Ensure textAngle is either between start and end angle, or more than end angle\n            if (textAngle < linkInfo.startAngle) {\n                textAngle += Math.PI * 2;\n            }\n            if (linkInfo.endAngle < linkInfo.startAngle) {\n                linkInfo.endAngle += Math.PI * 2;\n            }\n            // Calculate relDist from angle (inverse of angle-from-relDist calculation in Link.prototype.draw)\n            if (linkInfo.isReversed){\n                relDist = (textAngle - linkInfo.startAngle - Math.PI*2) / (linkInfo.endAngle - linkInfo.startAngle - Math.PI*2);\n            }else{\n                relDist = (textAngle - linkInfo.startAngle) / (linkInfo.endAngle - linkInfo.startAngle);\n            }\n            offset = util.vectorMagnitude({x: x-linkInfo.circleX, y: y-linkInfo.circleY}) - linkInfo.circleRadius;\n        }\n        else {\n            // Calculate relative position of the mouse projected onto the link.\n            var textVector = {x: x - linkInfo.startX,\n                              y: y - linkInfo.startY};\n            var linkVector = {x: linkInfo.endX - linkInfo.startX,\n                              y: linkInfo.endY - linkInfo.startY};\n            var projection = util.scalarProjection(textVector, linkVector);\n            relDist = projection / util.vectorMagnitude(linkVector);\n            // Calculate offset (closest distance) of the mouse position from the link\n            offset = Math.sqrt(Math.pow(util.vectorMagnitude(textVector), 2)- Math.pow(projection, 2));\n            // If the mouse is on the opposite side of the link from the default text position, negate the offset\n            var ccw = util.isCCW(textVector, linkVector);\n            var reversed = (this.parent.lineAngleAdjust != 0);\n            if ((!ccw && reversed) || (ccw && !reversed)){\n                offset *= -1;\n            }\n        }\n        if (relDist > 0 && relDist < 1){  //Ensure text isn't dragged past end of the link\n            this.relDist = relDist;\n            this.offset = Math.round(offset);\n            this.dragged = true;\n        }\n    };\n\n    TextBox.prototype.draw = function(x, y, angleOrNull, parentObject) {\n        var graph = parentObject.parent,\n            c = graph.getCanvas().getContext('2d');\n\n        c.font = graph.fontSize() + 'px Arial';\n        //Text before and after caret are drawn separately to expand Latex shortcuts at the caret position\n        var beforeCaretText = util.convertLatexShortcuts(this.text.slice(0, this.caretPosition));\n        var afterCaretText = util.convertLatexShortcuts(this.text.slice(this.caretPosition));\n        var width = c.measureText(beforeCaretText + afterCaretText).width;\n        var dy = Math.round(graph.fontSize() / 2);\n\n        // Position the text appropriately if it is part of a link\n        if(angleOrNull !== null) {\n            var cos = Math.cos(angleOrNull);\n            var sin = Math.sin(angleOrNull);\n\n            //Add text offset in the direction of the text angle\n            x += this.offset * cos;\n            y += this.offset * sin;\n\n            // Position text intelligently if text has not been manually moved\n            if (!this.dragged){\n                var cornerPointX = (width / 2) * (cos > 0 ? 1 : -1);\n                var cornerPointY = (dy / 2) * (sin > 0 ? 1 : -1);\n                var slide = sin * Math.pow(Math.abs(sin), 40) * cornerPointX - cos * Math.pow(Math.abs(cos), 10) * cornerPointY;\n                x += cornerPointX - sin * slide;\n                y += cornerPointY + cos * slide;\n            }\n            this.position = {x: Math.round(x), y: Math.round(y)};  //Record the position where text is anchored to\n        }\n\n        x -= width / 2;  // Center the text.\n\n        //Round the coordinates so they fall on a pixel\n        x = Math.round(x);\n        y = Math.round(y);\n\n        // Draw text and caret\n        if('advancedFillText' in c) {\n            c.advancedFillText(this.text, this.text, x + width / 2, y, angleOrNull);\n        } else {\n             // Draw translucent white rectangle behind text\n            var prevStyle = c.fillStyle;\n            c.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n            c.fillRect(x, y-dy, width, dy*2);\n            c.fillStyle = prevStyle;\n\n            // Draw text\n            dy = Math.round(graph.fontSize() / 3); // Don't understand this.\n            c.fillText(beforeCaretText, x, y + dy);\n            var caretX = x + c.measureText(beforeCaretText).width;\n            c.fillText(afterCaretText, caretX, y + dy);\n\n            // Draw caret\n            dy = Math.round(graph.fontSize() / 2);\n            if(parentObject == graph.selectedObject && graph.caretVisible && graph.hasFocus() && document.hasFocus()) {\n                c.beginPath();\n                c.moveTo(caretX, y - dy);\n                c.lineTo(caretX, y + dy);\n                c.stroke();\n            }\n        }\n        this.boundingBox = {x: x, y: y - dy, height: dy * 2, width: width};\n    };\n\n\n    return {\n        Node: Node,\n        Link: Link,\n        SelfLink: SelfLink,\n        TemporaryLink: TemporaryLink,\n        StartLink: StartLink,\n        Button: Button,\n        HelpBox: HelpBox,\n        TextBox: TextBox\n    };\n});\n"],"names":["define","util","Node","parent","x","y","mouseOffsetX","mouseOffsetY","isAcceptState","textBox","TextBox","this","caretPosition","Link","a","b","nodeA","nodeB","lineAngleAdjust","parallelPart","perpendicularPart","SelfLink","node","mouse","anchorAngle","mouseOffsetAngle","setAnchorPoint","StartLink","start","deltaX","deltaY","TemporaryLink","from","to","Button","topX","topY","text","BUTTON_WIDTH","BUTTON_HEIGHT","TEXT_OFFSET_X","TEXT_OFFSET_Y","highLighted","HelpBox","call","helpOpen","LINE_HEIGHT","HELP_INDENT","length","relDist","offset","textOffset","dragged","boundingBox","prototype","setMouseStart","mouseX","mouseY","trackMouse","draw","c","beginPath","arc","nodeRadius","Math","PI","stroke","closestPointOnCircle","dx","dy","scale","sqrt","containsPoint","neighbours","links","link","i","includes","push","traverseGraph","visited","neighbour","getAnchorPoint","abs","SNAP_TO_PADDING","getEndPointsAndCircle","midX","midY","end","anchor","circle","circleFromThreePoints","isReversed","reverseScale","rRatio","radius","startAngle","atan2","endAngle","cos","sin","textX","textY","textAngle","linkInfo","hasCircle","circleX","circleY","circleRadius","moveTo","startX","startY","lineTo","endX","endY","arrowIfReqd","distance","percent","HIT_TARGET_PADDING","angle","temp","mouseStartX","mouseStartY","snap","round","getEndPoints","endPoints","isInside","width","height","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","font","textAlign","fillText","onClick","lines","helpText","split","insertChar","char","slice","caretRight","deleteChar","caretLeft","point","position","vectorMagnitude","textVector","linkVector","projection","scalarProjection","pow","ccw","isCCW","reversed","angleOrNull","parentObject","graph","getCanvas","getContext","fontSize","beforeCaretText","convertLatexShortcuts","afterCaretText","measureText","cornerPointX","cornerPointY","slide","advancedFillText","prevStyle","caretX","selectedObject","caretVisible","hasFocus","document"],"mappings":";;;;;;;;;AAmDAA,wCAAO,CAAC,+BAA+B,SAASC,eASnCC,KAAKC,OAAQC,EAAGC,QAChBF,OAASA,YACTC,EAAIA,OACJC,EAAIA,OACJC,aAAe,OACfC,aAAe,OACfC,eAAgB,OAChBC,QAAU,IAAIC,QAAQ,GAAIC,WAC1BC,cAAgB,WAiGhBC,KAAKV,OAAQW,EAAGC,QAChBZ,OAASA,YACTa,MAAQF,OACRG,MAAQF,OACRN,QAAU,IAAIC,QAAQ,GAAIC,WAC1BO,gBAAkB,OAClBN,cAAgB,OAGhBO,aAAe,QACfC,kBAAoB,WAmKpBC,SAASlB,OAAQmB,KAAMC,YACvBpB,OAASA,YACTmB,KAAOA,UACPE,YAAc,OACdC,iBAAmB,OACnBhB,QAAU,IAAIC,QAAQ,GAAIC,MAE5BY,YACMG,eAAeH,MAAMnB,EAAGmB,MAAMlB,YAgFlCsB,UAAUxB,OAAQmB,KAAMM,YACxBzB,OAASA,YACTmB,KAAOA,UACPO,OAAS,OACTC,OAAS,EAEXF,YACMF,eAAeE,MAAMxB,EAAGwB,MAAMvB,YA2DlC0B,cAAc5B,OAAQ6B,KAAMC,SAC5B9B,OAASA,YACT6B,KAAOA,UACPC,GAAKA,YAqBLC,OAAO/B,OAAQgC,KAAMC,KAAMC,WAC7BC,aAAe,QACfC,cAAgB,QAChBC,cAAgB,QAChBC,cAAgB,QAChBN,KAAOA,UACPC,KAAOA,UACPjC,OAASA,YACTkC,KAAOA,UACPK,aAAc,WAsCZC,QAAQxC,OAAQgC,KAAMC,MAC7BF,OAAOU,KAAKjC,KAAMR,OAAQgC,KAAMC,KAAM,aACjCS,UAAW,OACXC,YAAc,QACdC,YAAc,WAkCZrC,QAAQ2B,KAAMlC,aACdkC,KAAOA,UACPlC,OAASA,YACTS,cAAgByB,KAAKW,YACrBC,QAAU,QACVC,OAAS/C,OAAOA,OAAOgD,kBACvBC,SAAU,OACVC,YAAc,UAxhBvBnD,KAAKoD,UAAUC,cAAgB,SAASC,OAAQC,aACvCnD,aAAeK,KAAKP,EAAIoD,YACxBjD,aAAeI,KAAKN,EAAIoD,QAGjCvD,KAAKoD,UAAU5B,eAAiB,SAAStB,EAAGC,QACnCD,EAAIA,EAAIO,KAAKL,kBACbD,EAAIA,EAAIM,KAAKJ,cAKtBL,KAAKoD,UAAUI,WAAa,SAASF,OAAQC,aACpCrD,EAAIO,KAAKL,aAAekD,YACxBnD,EAAIM,KAAKJ,aAAekD,QAGjCvD,KAAKoD,UAAUK,KAAO,SAASC,GAE3BA,EAAEC,YACFD,EAAEE,IAAInD,KAAKP,EAAGO,KAAKN,EAAGM,KAAKR,OAAO4D,aAAc,EAAG,EAAIC,KAAKC,IAAI,GAChEL,EAAEM,cAGGzD,QAAQkD,KAAKhD,KAAKP,EAAGO,KAAKN,EAAG,KAAMM,MAGrCA,KAAKH,gBACJoD,EAAEC,YACFD,EAAEE,IAAInD,KAAKP,EAAGO,KAAKN,EAAGM,KAAKR,OAAO4D,aAAe,EAAG,EAAG,EAAIC,KAAKC,IAAI,GACpEL,EAAEM,WAIVhE,KAAKoD,UAAUa,qBAAuB,SAAS/D,EAAGC,OAC1C+D,GAAKhE,EAAIO,KAAKP,EACdiE,GAAKhE,EAAIM,KAAKN,EACdiE,MAAQN,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,UAC9B,GACE1D,KAAKP,EAAIgE,GAAKzD,KAAKR,OAAO4D,aAAeO,QACzC3D,KAAKN,EAAIgE,GAAK1D,KAAKR,OAAO4D,aAAeO,QAItDpE,KAAKoD,UAAUkB,cAAgB,SAASpE,EAAGC,UAC/BD,EAAIO,KAAKP,IAAMA,EAAIO,KAAKP,IAAMC,EAAIM,KAAKN,IAAMA,EAAIM,KAAKN,GAAKM,KAAKR,OAAO4D,aAAepD,KAAKR,OAAO4D,cAM9G7D,KAAKoD,UAAUmB,WAAa,SAASC,eACZC,KAAjBF,WAAa,GACRG,EAAI,EAAGA,EAAIF,MAAM1B,OAAQ4B,KAC9BD,KAAOD,MAAME,cACO/D,OACZ8D,KAAK3D,QAAUL,MAAS8D,WAAWI,SAASF,KAAK1D,OAE1C0D,KAAK1D,QAAUN,MAAS8D,WAAWI,SAASF,KAAK3D,QACxDyD,WAAWK,KAAKH,KAAK3D,OAFrByD,WAAWK,KAAKH,KAAK1D,eAM1BwD,YAOXvE,KAAKoD,UAAUyB,cAAgB,SAASL,MAAOM,aACvCP,WACAQ,cACCD,QAAQH,SAASlE,MAAO,CACzBqE,QAAQF,KAAKnE,MACb8D,WAAa9D,KAAK8D,WAAWC,WACxB,IAAIE,EAAI,EAAGA,EAAIH,WAAWzB,OAAQ4B,IACnCK,UAAYR,WAAWG,GAClBI,QAAQH,SAASI,YAClBA,UAAUF,cAAcL,MAAOM,gBAIpCA,SAuBXnE,KAAKyC,UAAU4B,eAAiB,eACxBd,GAAKzD,KAAKM,MAAMb,EAAIO,KAAKK,MAAMZ,EAC/BiE,GAAK1D,KAAKM,MAAMZ,EAAIM,KAAKK,MAAMX,EAC/BiE,MAAQN,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,UAC9B,GACE1D,KAAKK,MAAMZ,EAAIgE,GAAKzD,KAAKQ,aAAekD,GAAK1D,KAAKS,kBAAoBkD,QACtE3D,KAAKK,MAAMX,EAAIgE,GAAK1D,KAAKQ,aAAeiD,GAAKzD,KAAKS,kBAAoBkD,QAInFzD,KAAKyC,UAAU5B,eAAiB,SAAStB,EAAGC,OACpC+D,GAAKzD,KAAKM,MAAMb,EAAIO,KAAKK,MAAMZ,EAC/BiE,GAAK1D,KAAKM,MAAMZ,EAAIM,KAAKK,MAAMX,EAC/BiE,MAAQN,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,SAChClD,cAAgBiD,IAAMhE,EAAIO,KAAKK,MAAMZ,GAAKiE,IAAMhE,EAAIM,KAAKK,MAAMX,KAAOiE,MAAQA,YAC9ElD,mBAAqBgD,IAAM/D,EAAIM,KAAKK,MAAMX,GAAKgE,IAAMjE,EAAIO,KAAKK,MAAMZ,IAAMkE,MAE5E3D,KAAKQ,aAAe,GAAKR,KAAKQ,aAAe,GAAK6C,KAAKmB,IAAIxE,KAAKS,mBAAqBT,KAAKR,OAAOiF,uBAC3FlE,iBAAmBP,KAAKS,kBAAoB,GAAK4C,KAAKC,QACtD7C,kBAAoB,IAIjCP,KAAKyC,UAAU+B,sBAAwB,cACL,IAA3B1E,KAAKS,kBAAyB,KACzBkE,MAAQ3E,KAAKK,MAAMZ,EAAIO,KAAKM,MAAMb,GAAK,EACvCmF,MAAQ5E,KAAKK,MAAMX,EAAIM,KAAKM,MAAMZ,GAAK,EACvCuB,MAAQjB,KAAKK,MAAMmD,qBAAqBmB,KAAMC,MAC9CC,IAAM7E,KAAKM,MAAMkD,qBAAqBmB,KAAMC,YACzC,YACU,SACH3D,MAAMxB,SACNwB,MAAMvB,OACRmF,IAAIpF,OACJoF,IAAInF,OAGhBoF,OAAS9E,KAAKuE,iBACdQ,OAASzF,KAAK0F,sBAAsBhF,KAAKK,MAAMZ,EAAGO,KAAKK,MAAMX,EAAGM,KAAKM,MAAMb,EAAGO,KAAKM,MAAMZ,EAAGoF,OAAOrF,EAAGqF,OAAOpF,GAC7GuF,WAAcjF,KAAKS,kBAAoB,EACvCyE,aAAeD,WAAa,GAAK,EACjCE,OAASD,aAAelF,KAAKR,OAAO4D,aAAe2B,OAAOK,OAC1DC,WAAahC,KAAKiC,MAAMtF,KAAKK,MAAMX,EAAIqF,OAAOrF,EAAGM,KAAKK,MAAMZ,EAAIsF,OAAOtF,GAAK0F,OAC5EI,SAAWlC,KAAKiC,MAAMtF,KAAKM,MAAMZ,EAAIqF,OAAOrF,EAAGM,KAAKM,MAAMb,EAAIsF,OAAOtF,GAAK0F,aAKvE,YACU,SALJJ,OAAOtF,EAAIsF,OAAOK,OAAS/B,KAAKmC,IAAIH,mBACpCN,OAAOrF,EAAIqF,OAAOK,OAAS/B,KAAKoC,IAAIJ,iBACtCN,OAAOtF,EAAIsF,OAAOK,OAAS/B,KAAKmC,IAAID,eACpCR,OAAOrF,EAAIqF,OAAOK,OAAS/B,KAAKoC,IAAIF,qBAO7BF,oBACFE,iBACDR,OAAOtF,UACPsF,OAAOrF,eACFqF,OAAOK,oBACPF,wBACFD,aAItB/E,KAAKyC,UAAUK,KAAO,SAASC,OACkByC,MAAOC,MAAOC,UAAWtD,QAAlEuD,SAAW7F,KAAK0E,2BAEpBzB,EAAEC,YACC2C,SAASC,UACR7C,EAAEE,IAAI0C,SAASE,QACTF,SAASG,QACTH,SAASI,aACTJ,SAASR,WACTQ,SAASN,SACTM,SAASZ,aAEfhC,EAAEiD,OAAOL,SAASM,OAAQN,SAASO,QACnCnD,EAAEoD,OAAOR,SAASS,KAAMT,SAASU,OAErCtD,EAAEM,SAECsC,SAASC,eACHtG,OAAOgH,YAAYvD,EACd4C,SAASS,KACTT,SAASU,KACTV,SAASN,SAAWM,SAASX,cAAgB7B,KAAKC,GAAK,SAE5D9D,OAAOgH,YAAYvD,EACd4C,SAASS,KACTT,SAASU,KACTlD,KAAKiC,MAAMO,SAASU,KAAOV,SAASO,OAAQP,SAASS,KAAOT,SAASM,SAGnF7D,QAAUtC,KAAKF,QAAQwC,QACpBuD,SAASC,UAAW,KACfT,WAAaQ,SAASR,WACtBE,SAAWM,SAASN,SACpBA,SAAWF,aACXE,UAAsB,EAAVlC,KAAKC,IAGrBsC,WAAc,EAAItD,SAAW+C,WAAa/C,QAAUiD,SAChDM,SAASZ,aACXW,YAAc,EAAItD,UAAY,EAAIe,KAAKC,KAEzCoC,MAAQG,SAASE,QAAUF,SAASI,aAAe5C,KAAKmC,IAAII,WAC5DD,MAAQE,SAASG,QAAUH,SAASI,aAAe5C,KAAKoC,IAAIG,gBACvD9F,QAAQkD,KAAK0C,MAAOC,MAAOC,UAAW5F,WAE3C0F,OAAU,EAAIpD,SAAWuD,SAASM,OAAS7D,QAAUuD,SAASS,KAC9DX,OAAU,EAAIrD,SAAWuD,SAASO,OAAS9D,QAAUuD,SAASU,KAC9DX,UAAYvC,KAAKiC,MAAMO,SAASS,KAAOT,SAASM,OAAQN,SAASO,OAASP,SAASU,WAC9EzG,QAAQkD,KAAK0C,MAAOC,MAAOC,UAAY5F,KAAKO,gBAAiBP,OAI1EE,KAAKyC,UAAUkB,cAAgB,SAASpE,EAAGC,OACM+D,GAAIC,GAAI+C,SAAjDZ,SAAW7F,KAAK0E,4BACjBmB,SAASC,UAuBL,CACHrC,GAAKoC,SAASS,KAAOT,SAASM,OAC9BzC,GAAKmC,SAASU,KAAOV,SAASO,WAC1B/D,OAASgB,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,IAClCgD,SAAWjD,IAAMhE,EAAIoG,SAASM,QAAUzC,IAAMhE,EAAImG,SAASO,UAAY/D,OAASA,eACpFoE,UAAYhD,IAAM/D,EAAImG,SAASO,QAAU1C,IAAMjE,EAAIoG,SAASM,SAAW9D,OAC/DqE,QAAU,GAAKA,QAAU,GAAKrD,KAAKmB,IAAIiC,UAAYzG,KAAKR,OAAOmH,sBA5BvElD,GAAKhE,EAAIoG,SAASE,QAClBrC,GAAKhE,EAAImG,SAASG,QAClBS,SAAWpD,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,IAAMmC,SAASI,aAChD5C,KAAKmB,IAAIiC,UAAYzG,KAAKR,OAAOmH,mBAAoB,KAChDC,MAAQvD,KAAKiC,MAAM5B,GAAID,IACvB4B,WAAaQ,SAASR,WACtBE,SAAWM,SAASN,YACrBM,SAASZ,WAAY,KAChB4B,KAAOxB,WACXA,WAAaE,SACbA,SAAWsB,YAEZtB,SAAWF,aACVE,UAAsB,EAAVlC,KAAKC,IAElBsD,MAAQvB,WACPuB,OAAmB,EAAVvD,KAAKC,GACRsD,MAAQrB,WACdqB,OAAmB,EAAVvD,KAAKC,IAEVsD,MAAQvB,YAAcuB,MAAQrB,gBAUvC,GAuBX7E,SAASiC,UAAUC,cAAgB,SAASnD,EAAGC,QACtCoH,YAAcrH,OACdsH,YAAcrH,GAGvBgB,SAASiC,UAAU5B,eAAiB,SAAStB,EAAGC,QACvCmB,YAAcwC,KAAKiC,MAAM5F,EAAIM,KAAKW,KAAKjB,EAAGD,EAAIO,KAAKW,KAAKlB,GAAKO,KAAKc,qBAEnEkG,KAAO3D,KAAK4D,MAAMjH,KAAKa,aAAewC,KAAKC,GAAK,KAAOD,KAAKC,GAAK,GAClED,KAAKmB,IAAIxE,KAAKa,YAAcmG,MAAQ,UAC9BnG,YAAcmG,MAGpBhH,KAAKa,aAAewC,KAAKC,UACnBzC,aAAe,EAAIwC,KAAKC,IAE9BtD,KAAKa,YAAcwC,KAAKC,UAClBzC,aAAe,EAAIwC,KAAKC,KAIrC5C,SAASiC,UAAU+B,sBAAwB,eACnCqB,QAAU/F,KAAKW,KAAKlB,EAAI,IAAMO,KAAKR,OAAO4D,aAAeC,KAAKmC,IAAIxF,KAAKa,aACvEmF,QAAUhG,KAAKW,KAAKjB,EAAI,IAAMM,KAAKR,OAAO4D,aAAeC,KAAKoC,IAAIzF,KAAKa,aACvEoF,aAAe,IAAOjG,KAAKR,OAAO4D,aAClCiC,WAAarF,KAAKa,YAAwB,GAAVwC,KAAKC,GACrCiC,SAAWvF,KAAKa,YAAwB,GAAVwC,KAAKC,SAKhC,YACU,SALJyC,QAAUE,aAAe5C,KAAKmC,IAAIH,mBAClCW,QAAUC,aAAe5C,KAAKoC,IAAIJ,iBACpCU,QAAUE,aAAe5C,KAAKmC,IAAID,eAClCS,QAAUC,aAAe5C,KAAKoC,IAAIF,qBAO3BF,oBACFE,iBACDQ,gBACAC,qBACKC,eAIxBvF,SAASiC,UAAUK,KAAO,SAASC,OAC3B4C,SAAW7F,KAAK0E,wBAEpBzB,EAAEC,YACFD,EAAEE,IAAI0C,SAASE,QAASF,SAASG,QAASH,SAASI,aAAcJ,SAASR,WAAYQ,SAASN,UAAU,GACzGtC,EAAEM,aAEEjB,QAAUtC,KAAKF,QAAQwC,QACvBsD,UAAYC,SAASR,YAAc,EAAI/C,SAAWuD,SAASN,SAAWjD,QACtEoD,MAAQG,SAASE,QAAUF,SAASI,aAAe5C,KAAKmC,IAAII,WAC5DD,MAAQE,SAASG,QAAUH,SAASI,aAAe5C,KAAKoC,IAAIG,gBAC3D9F,QAAQkD,KAAK0C,MAAOC,MAAOC,UAAW5F,WAEtCR,OAAOgH,YAAYvD,EAAG4C,SAASS,KAAMT,SAASU,KAAMV,SAASN,SAAqB,GAAVlC,KAAKC,KAGtF5C,SAASiC,UAAUkB,cAAgB,SAASpE,EAAGC,OACvCmG,SAAW7F,KAAK0E,wBAChBjB,GAAKhE,EAAIoG,SAASE,QAClBrC,GAAKhE,EAAImG,SAASG,QAClBS,SAAWpD,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,IAAMmC,SAASI,oBAC/C5C,KAAKmB,IAAIiC,UAAYzG,KAAKR,OAAOmH,oBAqB7C3F,UAAU2B,UAAU5B,eAAiB,SAAStB,EAAGC,QACxCwB,OAASzB,EAAIO,KAAKW,KAAKlB,OACvB0B,OAASzB,EAAIM,KAAKW,KAAKjB,EAEzB2D,KAAKmB,IAAIxE,KAAKkB,QAAUlB,KAAKR,OAAOiF,uBAC9BvD,OAAS,GAGfmC,KAAKmB,IAAIxE,KAAKmB,QAAUnB,KAAKR,OAAOiF,uBAC9BtD,OAAS,IAItBH,UAAU2B,UAAUuE,aAAe,eAC3Bf,OAASnG,KAAKW,KAAKlB,EAAIO,KAAKkB,OAC5BkF,OAASpG,KAAKW,KAAKjB,EAAIM,KAAKmB,OAC5B0D,IAAM7E,KAAKW,KAAK6C,qBAAqB2C,OAAQC,cAC1C,QACOD,cACAC,YACFvB,IAAIpF,OACJoF,IAAInF,IAIpBsB,UAAU2B,UAAUK,KAAO,SAASC,OAC5BkE,UAAYnH,KAAKkH,eAGrBjE,EAAEC,YACFD,EAAEiD,OAAOiB,UAAUhB,OAAQgB,UAAUf,QACrCnD,EAAEoD,OAAOc,UAAUb,KAAMa,UAAUZ,MACnCtD,EAAEM,cAGG/D,OAAOgH,YAAYvD,EAAGkE,UAAUb,KAAMa,UAAUZ,KAAMlD,KAAKiC,OAAOtF,KAAKmB,QAASnB,KAAKkB,UAG9FF,UAAU2B,UAAUkB,cAAgB,SAASpE,EAAGC,OACxCyH,UAAYnH,KAAKkH,eACjBzD,GAAK0D,UAAUb,KAAOa,UAAUhB,OAChCzC,GAAKyD,UAAUZ,KAAOY,UAAUf,OAChC/D,OAASgB,KAAKO,KAAKH,GAAKA,GAAKC,GAAKA,IAClCgD,SAAWjD,IAAMhE,EAAI0H,UAAUhB,QAAUzC,IAAMhE,EAAIyH,UAAUf,UAAY/D,OAASA,QAClFoE,UAAYhD,IAAM/D,EAAIyH,UAAUf,QAAU1C,IAAMjE,EAAI0H,UAAUhB,SAAW9D,cACrEqE,QAAU,GAAKA,QAAU,GAAKrD,KAAKmB,IAAIiC,UAAYzG,KAAKR,OAAOmH,oBAgB3EvF,cAAcuB,UAAUK,KAAO,SAASC,GAEpCA,EAAEC,YACFD,EAAEiD,OAAOlG,KAAKsB,GAAG7B,EAAGO,KAAKsB,GAAG5B,GAC5BuD,EAAEoD,OAAOrG,KAAKqB,KAAK5B,EAAGO,KAAKqB,KAAK3B,GAChCuD,EAAEM,cAGG/D,OAAOgH,YAAYvD,EAAGjD,KAAKsB,GAAG7B,EAAGO,KAAKsB,GAAG5B,EAAG2D,KAAKiC,MAAMtF,KAAKsB,GAAG5B,EAAIM,KAAKqB,KAAK3B,EAAGM,KAAKsB,GAAG7B,EAAIO,KAAKqB,KAAK5B,KAsB/G8B,OAAOoB,UAAUkB,cAAgB,SAASpE,EAAGC,UAClCJ,KAAK8H,SAAS,CAAC3H,EAAGA,EAAGC,EAAGA,GAC7B,CAACD,EAAGO,KAAKwB,KAAM9B,EAAGM,KAAKyB,KAAM4F,MAAOrH,KAAK2B,aAAc2F,OAAQtH,KAAK4B,iBAG1EL,OAAOoB,UAAUK,KAAO,SAASC,GACzBjD,KAAK+B,YACLkB,EAAEsE,UAAY,UAEdtE,EAAEsE,UAAY,UAElBtE,EAAEuE,SAASxH,KAAKwB,KAAMxB,KAAKyB,KACvBzB,KAAK2B,aAAc3B,KAAK4B,eAC5BqB,EAAEwE,UAAY,GACdxE,EAAEyE,YAAc,UAChBzE,EAAE0E,WAAW3H,KAAKwB,KAAMxB,KAAKyB,KACzBzB,KAAK2B,aAAc3B,KAAK4B,eAE5BqB,EAAE2E,KAAO,aACT3E,EAAEsE,UAAY,UACdtE,EAAE4E,UAAY,SACd5E,EAAE6E,SAAS9H,KAAK0B,KAAM1B,KAAKwB,KAAOxB,KAAK6B,cAAe7B,KAAKyB,KAAOzB,KAAK8B,eACvEmB,EAAE4E,UAAY,QAGlBtG,OAAOoB,UAAUoF,QAAU,aAiB3B/F,QAAQW,UAAY,IAAIpB,OAExBS,QAAQW,UAAUK,KAAO,SAASC,OAC1B+E,MAAO/D,EAAGvE,EAAGuI,YAEjB1G,OAAOoB,UAAUK,KAAKf,KAAKjC,KAAMiD,GAE7BjD,KAAKkC,aACL+F,SAAWjI,KAAKR,OAAOyI,SACvBhF,EAAE2E,KAAO,aACTI,MAAQC,SAASC,MAAM,MACvBxI,EAAIM,KAAKyB,KAAOzB,KAAK4B,cAChBqC,EAAI,EAAGA,EAAI+D,MAAM3F,OAAQ4B,GAAK,EAC/BvE,GAAKM,KAAKmC,YACVc,EAAE6E,SAASE,MAAM/D,GAAIjE,KAAKwB,KAAOxB,KAAKoC,YAAa1C,IAK/DsC,QAAQW,UAAUoF,QAAU,gBACnB7F,UAAalC,KAAKkC,cAClB1C,OAAOwD,QAqBhBjD,QAAQ4C,UAAUwF,WAAa,SAASC,WAC/B1G,KAAO1B,KAAK0B,KAAK2G,MAAM,EAAGrI,KAAKC,eAAiBmI,KAAOpI,KAAK0B,KAAK2G,MAAMrI,KAAKC,oBAC5EqI,cAITvI,QAAQ4C,UAAU4F,WAAa,WACvBvI,KAAKC,cAAgB,SAChByB,KAAO1B,KAAK0B,KAAK2G,MAAM,EAAGrI,KAAKC,cAAgB,GAAKD,KAAK0B,KAAK2G,MAAMrI,KAAKC,oBACzEuI,cAKbzI,QAAQ4C,UAAU6F,UAAY,WACtBxI,KAAKC,cAAgB,QAChBA,iBAKbF,QAAQ4C,UAAU2F,WAAa,WACvBtI,KAAKC,cAAgBD,KAAK0B,KAAKW,aAC1BpC,iBAIbF,QAAQ4C,UAAUkB,cAAgB,SAASpE,EAAGC,OACtC+I,MAAQ,CAAChJ,EAAGA,EAAGC,EAAGA,UACfJ,KAAK8H,SAASqB,MAAOzI,KAAK0C,cAGrC3C,QAAQ4C,UAAUC,cAAgB,SAASnD,EAAGC,QAErCC,aAAeK,KAAK0I,SAASjJ,EAAIA,OACjCG,aAAeI,KAAK0I,SAAShJ,EAAIA,GAG1CK,QAAQ4C,UAAU5B,eAAiB,SAAStB,EAAGC,GAC3CD,GAAMO,KAAKL,cAAgB,EAC3BD,GAAMM,KAAKJ,cAAgB,MAEvB0C,QAASC,OADTsD,SAAW7F,KAAKR,OAAOkF,2BAGvBmB,SAASC,UAAU,KACfF,UAAYvC,KAAKiC,MAAM5F,EAAEmG,SAASG,QAASvG,EAAEoG,SAASE,SAEtDH,UAAYC,SAASR,aACrBO,WAAuB,EAAVvC,KAAKC,IAElBuC,SAASN,SAAWM,SAASR,aAC7BQ,SAASN,UAAsB,EAAVlC,KAAKC,IAI1BhB,QADAuD,SAASZ,YACEW,UAAYC,SAASR,WAAqB,EAARhC,KAAKC,KAASuC,SAASN,SAAWM,SAASR,WAAqB,EAARhC,KAAKC,KAE/FsC,UAAYC,SAASR,aAAeQ,SAASN,SAAWM,SAASR,YAEhF9C,OAASjD,KAAKqJ,gBAAgB,CAAClJ,EAAGA,EAAEoG,SAASE,QAASrG,EAAGA,EAAEmG,SAASG,UAAYH,SAASI,iBAExF,KAEG2C,WAAa,CAACnJ,EAAGA,EAAIoG,SAASM,OAChBzG,EAAGA,EAAImG,SAASO,QAC9ByC,WAAa,CAACpJ,EAAGoG,SAASS,KAAOT,SAASM,OAC5BzG,EAAGmG,SAASU,KAAOV,SAASO,QAC1C0C,WAAaxJ,KAAKyJ,iBAAiBH,WAAYC,YACnDvG,QAAUwG,WAAaxJ,KAAKqJ,gBAAgBE,YAE5CtG,OAASc,KAAKO,KAAKP,KAAK2F,IAAI1J,KAAKqJ,gBAAgBC,YAAa,GAAIvF,KAAK2F,IAAIF,WAAY,QAEnFG,IAAM3J,KAAK4J,MAAMN,WAAYC,YAC7BM,SAA2C,GAA/BnJ,KAAKR,OAAOe,kBACtB0I,KAAOE,UAAcF,MAAQE,YAC/B5G,SAAW,GAGfD,QAAU,GAAKA,QAAU,SACpBA,QAAUA,aACVC,OAASc,KAAK4D,MAAM1E,aACpBE,SAAU,IAIvB1C,QAAQ4C,UAAUK,KAAO,SAASvD,EAAGC,EAAG0J,YAAaC,kBAC7CC,MAAQD,aAAa7J,OACrByD,EAAIqG,MAAMC,YAAYC,WAAW,MAErCvG,EAAE2E,KAAO0B,MAAMG,WAAa,eAExBC,gBAAkBpK,KAAKqK,sBAAsB3J,KAAK0B,KAAK2G,MAAM,EAAGrI,KAAKC,gBACrE2J,eAAiBtK,KAAKqK,sBAAsB3J,KAAK0B,KAAK2G,MAAMrI,KAAKC,gBACjEoH,MAAQpE,EAAE4G,YAAYH,gBAAkBE,gBAAgBvC,MACxD3D,GAAKL,KAAK4D,MAAMqC,MAAMG,WAAa,MAGpB,OAAhBL,YAAsB,KACjB5D,IAAMnC,KAAKmC,IAAI4D,aACf3D,IAAMpC,KAAKoC,IAAI2D,gBAGnB3J,GAAKO,KAAKuC,OAASiD,IACnB9F,GAAKM,KAAKuC,OAASkD,KAGdzF,KAAKyC,QAAQ,KACVqH,aAAgBzC,MAAQ,GAAM7B,IAAM,EAAI,GAAK,GAC7CuE,aAAgBrG,GAAK,GAAM+B,IAAM,EAAI,GAAK,GAC1CuE,MAAQvE,IAAMpC,KAAK2F,IAAI3F,KAAKmB,IAAIiB,KAAM,IAAMqE,aAAetE,IAAMnC,KAAK2F,IAAI3F,KAAKmB,IAAIgB,KAAM,IAAMuE,aACnGtK,GAAKqK,aAAerE,IAAMuE,MAC1BtK,GAAKqK,aAAevE,IAAMwE,WAEzBtB,SAAW,CAACjJ,EAAG4D,KAAK4D,MAAMxH,GAAIC,EAAG2D,KAAK4D,MAAMvH,OAGrDD,GAAK4H,MAAQ,EAGb5H,EAAI4D,KAAK4D,MAAMxH,GACfC,EAAI2D,KAAK4D,MAAMvH,GAGZ,qBAAsBuD,EACrBA,EAAEgH,iBAAiBjK,KAAK0B,KAAM1B,KAAK0B,KAAMjC,EAAI4H,MAAQ,EAAG3H,EAAG0J,iBACxD,KAECc,UAAYjH,EAAEsE,UAClBtE,EAAEsE,UAAY,2BACdtE,EAAEuE,SAAS/H,EAAGC,EAAEgE,GAAI2D,MAAU,EAAH3D,IAC3BT,EAAEsE,UAAY2C,UAGdxG,GAAKL,KAAK4D,MAAMqC,MAAMG,WAAa,GACnCxG,EAAE6E,SAAS4B,gBAAiBjK,EAAGC,EAAIgE,QAC/ByG,OAAS1K,EAAIwD,EAAE4G,YAAYH,iBAAiBrC,MAChDpE,EAAE6E,SAAS8B,eAAgBO,OAAQzK,EAAIgE,IAGvCA,GAAKL,KAAK4D,MAAMqC,MAAMG,WAAa,GAChCJ,cAAgBC,MAAMc,gBAAkBd,MAAMe,cAAgBf,MAAMgB,YAAcC,SAASD,aAC1FrH,EAAEC,YACFD,EAAEiD,OAAOiE,OAAQzK,EAAIgE,IACrBT,EAAEoD,OAAO8D,OAAQzK,EAAIgE,IACrBT,EAAEM,eAGLb,YAAc,CAACjD,EAAGA,EAAGC,EAAGA,EAAIgE,GAAI4D,OAAa,EAAL5D,GAAQ2D,MAAOA,QAIzD,CACH9H,KAAMA,KACNW,KAAMA,KACNQ,SAAUA,SACVU,cAAeA,cACfJ,UAAWA,UACXO,OAAQA,OACRS,QAASA,QACTjC,QAASA"}